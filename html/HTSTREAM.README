# htstream: high throughput streaming.
# Document written by peter.milne@d-tacq.com, 20100808
# Tested to:
2 x ACQ196 at 200kHz
4 x ACQ196 at 100kSPS

2 x ACQ196-DSP at 300kHz.

1 x ACQ164 at 128kHz


NB:
On each target computer, this script needs to run once:
/usr/local/CARE/setup.htstream.

On new installs, uncomment the "HTSTREAM" option in /ffs/rc.local.options
otherwise, append the command to /ffs/user/rc.user

WARNING:
Once the htstream program is running, DO NOT try to run the following commands
over the HOSTDRV interface:
acqcmd -b SLOT setArm
acqcmd -b SLOT setAbort.

In general, queries such as 
acqcmd -b SLOT getNumSamples or
acqcmd -s 7 cat /proc/driver/acq200/tblocks

are acceptable.

In a system with no Ethernet, running either of the above commands in a poll 
eg using forsleep, is a reasonable way to monitor the acquisition state.


It is possible, and encouraged to:
- run a sequence of acqcmd's
- start the capture with acqcmd setArm
- run htstream
- stop htstream (kill it)
- stop the capture with acqcmd setAbort

Please refer to setup.htstream.multi for test harness.
setup.htstream.multi will configure card[s] for capture, and generate a
control script /tmp/htstream.SLOT to run the capture.

Bootstrap issues. 
In normal use:

./setup.htstream.multi SLOT1 [SLOT2 ..]

in multiple terminals:
/tmp/htstream.SLOT1 [1=verbose] 
...
/tmp/htstream.SLOTN


.. will setup and arm the cards in SLOT1, SLOT2 ...
The cards will sit in ARM mode waiting for external trigger.
When the trigger arrives, the htstream processes start streaming data to disk.

However, if you don't have an external trigger, please beware that, once the 
htstream processes have started, and are blocked waiting for first data,
then it's no longer possible to communicate with the cards on the backplane.
So, then it's not possible to "fake a trigger" on the backplane.
If there is still an Ethernet interface (ACQ196), then the trigger can be
operated from the DIO webpage (or shell command line) in the normal way.

For test purposes, setup.htstream.multi allows a SOFT_TRIGGER, this is 
recommended to avoid the bootstrap problem, although now of course the capture
from each card is no longer synchronized with any external trigger.


setup.htstream.multi supercedes setup.htstream, which has been archived as
setup.htstream.old

Example:
We have two cards in slots 3, 5


#1 We set up a fast disk to receive data:
mkdir /mnt/ramdisk
mount -t tmpfs -o size=128M tmpfs /mnt/ramdisk

#2 Configure the cards
TRIG_DIX=none ./setup.htstream.multi 3 5

#3 Run worker tasks (debug=0)
/tmp/htstream.3 0 & /tmp/htstream.5 0 &

#4 Both cards are in the ARM state.
Trigger the cards FROM ETHERNET using the DIO page of the card in slot 3.
(Click the DOWN ARROW for D3 in setDIO)

#5 Both cards are now in the run state
Data is written to the ramdisk:

[dt100@kilda HOSTDRV]$ ls -l /mnt/ramdisk/3
total 36936
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.000
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.001
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.002
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.003
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.004
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.005
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.006
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.007
-rwx------ 1 dt100 dt100 4194304 2010-08-09 14:19 XX.3.008


#6 This data is RAW. 
ACQ200_NFILES : number of files to create
ACQ200_MAXFILE : max length of each file
The files are recycled one ACQ200_NFILES have been created, unless
ACQ200_ONESHOT is set.


#7 If the fast disk is big and fast enough to take all the data, set 
ACQ200_ONESHOT to avoid file overwrite.

#8 The data can be demultiplexed (possibly in real time) using 
acq_demux.

acq_demux -a acqXXX.def /mnt/ramdisk/SLOT/XX*  


The Linux inotify(7) subsystem could be used to feed files to acq_demux. eg:

Example:
[dt100@kilda HOSTDRV]$ ./notify /mnt/ramdisk/3
notify  Copyright (C) 2008  Ido Kanner LINESIP
This program comes with ABSOLUTELY NO WARRANTY; for details read the license.
This is free software, and you are welcome to redistribute it
under certain conditions; read the license for details.

notify testing version 0.1b
Press on ^C to stop the program from running
Action: [XX.3.008 was opened for writing and is now closed]
	wd=1 mask=8 cookie=0 len=16 dir=no name=XX.3.008

Action: [XX.3.000 was opened for writing and is now closed]
	wd=1 mask=8 cookie=0 len=16 dir=no name=XX.3.000

Action: [XX.3.001 was opened for writing and is now closed]
	wd=1 mask=8 cookie=0 len=16 dir=no name=XX.3.001

Action: [XX.3.002 was opened for writing and is now closed]
	wd=1 mask=8 cookie=0 len=16 dir=no name=XX.3.002

Action: [XX.3.003 was opened for writing and is now closed]
	wd=1 mask=8 cookie=0 len=16 dir=no name=XX.3.003


#9 STOPPING
Unless ACQ200_ONESHOT is set, htstream will run forever.
To terminate, simply send it a signal (kill it).

The ACQ196 will continue capturing data. 
It's possible to restart streaming at any time (run htstream again), but now the output data will not be synchronized to any trigger.

To stop the capture, once htstream has been terminated, run

acqcmd -b SLOT setAbort 

for each card.

